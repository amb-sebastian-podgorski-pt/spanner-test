plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'pl.rewedigital'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

ext {
	springCloudGcpVersion="6.0.1"
	springCloudVersion="2024.0.0"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:${springCloudGcpVersion}"
	}
}


configurations {
	agent
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'


	// -------------- Spanner
	implementation 'com.google.cloudspannerecosystem:liquibase-spanner:4.28.0'
	implementation 'com.google.cloud:google-cloud-spanner-jdbc'
	// -------------- Spanner


	// -------------- Opentelemetry
	agent "io.opentelemetry.javaagent:opentelemetry-javaagent:2.13.1"
	implementation "io.opentelemetry:opentelemetry-api:1.47.0"
	runtimeOnly "io.opentelemetry.instrumentation:opentelemetry-logback-mdc-1.0:2.13.1-alpha"
	runtimeOnly "io.micrometer:micrometer-registry-prometheus"

	// -------------- Opentelemetry

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register('downloadAgent', Copy) {
	from configurations.agent
	rename('(.*)-.*(.jar)', '$1$2')
	into 'agent/'
}

tasks.processResources.finalizedBy tasks.downloadAgent

tasks.named('test') {
	useJUnitPlatform()
}
